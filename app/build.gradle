buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.2'
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "http://repository.jetbrains.com/all" }
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'
apply from: 'config/gradle/jacoco.gradle'

def STRING = "String"
def BOOLEAN = "boolean"

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

    defaultConfig {
        applicationId "com.mrb.loteriadenavidad"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode computeVersionCode()
        versionName "4.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField STRING, "API_URL", '"http://api.elpais.com/ws"'
    }

    buildTypes {
        debug {
            applicationIdSuffix '.develop'
            buildConfigField STRING, "GIT_SHA", "\"DEBUG\""
            buildConfigField STRING, "BUILD_TIME", "\"DEBUG\""
            buildConfigField BOOLEAN, "RETROFIT_LOG", "true"
            debuggable true
            minifyEnabled false
            testCoverageEnabled true
        }

        release {
            def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
            def buildTime = new GregorianCalendar().format("MM-dd-yyyy' 'h:mm:ss a z")
            buildConfigField STRING, "GIT_SHA", "\"${gitSha}\""
            buildConfigField STRING, "BUILD_TIME", "\"${buildTime}\""
            buildConfigField BOOLEAN, "RETROFIT_LOG", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
    }
}

kapt {
    generateStubs = true
}

dexcount {
    format = "list"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = true
    orderByMethodCount = false
    verbose = true
    maxTreeDepth = Integer.MAX_VALUE
    enableForInstantRun = false
    runOnEachAssemble = false
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:support-annotations:25.3.1'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'

    compile 'io.reactivex.rxjava2:rxjava:2.0.2'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.okhttp3:okhttp:3.4.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.2'
    compile 'org.jsoup:jsoup:1.10.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }

    compile 'com.google.dagger:dagger:2.5'
    kapt 'com.google.dagger:dagger-compiler:2.5'
    provided 'org.glassfish:javax.annotation:10.0-b28'
}

/**
 * Gets the commit number from the current Git commit. E.g. 538
 */
def computeVersionCode() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--count', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().toInteger()
}